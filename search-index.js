var searchIndex = JSON.parse('{\
"auxtest":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"auxtools":{"doc":"For when BYOND is not enough. Probably often.","t":[17,6,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,11,11,11,11,11,11,11,11,11,11,11,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,23,12,23,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,0,11,14,23,11,11,11,23,14,14,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,3,3,12,12,11,11,11,11,12,12,12,11,11,12,11,11,12,12,11,12,12,12,12,11,11,11,11,11,11,12,0,0,0,0,0,0,0,7,7,7,7,5,7,5,7,5,7,5,7,5,7,5,7,5,7,5,7,5,7,5,7,5,7,5,7,5,7,5,7,7,5,7,5,7,5,7,12,3,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,8,3,3,3,3,3,3,3,19,19,3,3,3,3,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,3,3,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,12,12,12,11,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,12,12,12,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,19,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,12,12,11,11,11,11,11,3,11,11,14,11,11,11,11,11,11,11],"n":["BYONDCORE","DMResult","List","Proc","Runtime","StringRef","Value","append","as_list","as_number","as_string","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byond_ffi_fn","byond_string","bytecode","bytecode_mut_ptr","call","call","clone","clone","clone","clone_into","clone_into","clone_into","data","debug","drop","entry","eq","find","find_override","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_id","from_id","from_iter","from_raw","from_raw","from_raw_owned","from_string","from_string_raw","from_value","from_value","from_variable_id","get","get","get_id","get_list","get_number","get_string","get_type","globals","hash","hook","hook","id","init","into","into","into","into","into","is_exact_type","is_list","is_truthy","len","local_names","message","new","new","new","new","null","override_id","parameter_names","path","raw","raw_types","remove","runtime","runtime_handler","set","set","set_bytecode","shutdown","signature","signatures","sigscan","to_dmstring","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","turf","turf_by_id","turf_by_id_unchecked","type_id","type_id","type_id","type_id","type_id","value","with_size","world","CallStacks","StackFrame","active","args","borrow","borrow","borrow_mut","borrow_mut","context","dot","file_name","from","from","instance","into","into","line_number","locals","new","offset","proc","src","suspended","try_from","try_from","try_into","try_into","type_id","type_id","usr","funcs","lists","misc","procs","strings","values","variables","CURRENT_EXECUTION_CONTEXT","SUSPENDED_PROCS","SUSPENDED_PROCS_BUFFER","VARIABLE_NAMES","append_to_list","append_to_list_byond","call_datum_proc_by_name","call_datum_proc_by_name_byond","call_proc_by_id","call_proc_by_id_byond","create_list","create_list_byond","dec_ref_count","dec_ref_count_byond","get_assoc_element","get_assoc_element_byond","get_length","get_length_byond","get_misc_by_id","get_misc_by_id_byond","get_proc_array_entry","get_proc_array_entry_byond","get_string_id","get_string_id_byond","get_string_table_entry","get_string_table_entry_byond","get_variable","get_variable_byond","inc_ref_count","inc_ref_count_byond","remove_from_list","remove_from_list_byond","runtime_byond","set_assoc_element","set_assoc_element_byond","set_variable","set_variable_byond","to_string","to_string_byond","0","AssociativeListEntry","List","ListId","allocated","assoc_part","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fmt","from","from","from","into","into","into","length","refcount","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vector_part","AsMiscId","BytecodeId","Bytecode_V1","Bytecode_V2","LocalsId","Locals_V1","Locals_V2","MiscId","Misc_V1","Misc_V2","ParametersData","ParametersId","Parameters_V1","Parameters_V2","as_misc_id","as_misc_id","as_misc_id","as_misc_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytecode","bytecode","bytecode","bytecode","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","count","count","count","count","count","data","data","eq","eq","eq","eq","from","from","from","from","from","from","from","from","from","from","from","from","from","get_bytecode","get_locals","get_parameters","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","locals","locals","name","names","names","ne","ne","ne","ne","parameters","parameters","set_bytecode","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","ExecutionContext","ProcEntry","ProcId","ProcInstance","SuspendedProcs","SuspendedProcsBuffer","args","args_count","back","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","bytecode","bytecode","bytecode_offset","capacity","category","clone","clone_into","context","desc","dot","eq","filename","flags","from","from","from","from","from","from","front","hash","into","into","into","into","into","into","line","locals","locals","locals_count","mega_hack","name","ne","parameters","parent_context","path","proc","proc_instance","src","time_to_resume","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","usr","0","0","StringEntry","StringId","VariableId","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","data","fmt","fmt","fmt","from","from","from","into","into","into","left","ref_count","right","this","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unk_1","unk_2","valid","Appearance","Area","AreaOverlays","AreaTypepath","AreaUnderlays","AreaVars","Client","ClientVars","Datum","GlobalVars","Image","ImageVars","List","Mob","MobOverlays","MobTypepath","MobUnderlays","MobVars","Null","Number","Obj","ObjOverlays","ObjTypepath","ObjUnderlays","ObjVars","Resource","SaveFile","String","Turf","TurfOverlays","TurfTypepath","TurfUnderlays","TurfVars","Value","ValueData","ValueTag","Vars","World","WorldVars","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","data","eq","fmt","fmt","fmt","fmt","from","from","from","hash","id","into","into","into","list","number","string","tag","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","VariableNameIdTable","borrow","borrow_mut","count","entries","from","into","try_from","try_into","type_id","Scanner","borrow","borrow_mut","convert_signature","find","for_module","from","into","try_from","try_into","type_id"],"q":["auxtools","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auxtools::debug","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auxtools::raw_types","","","","","","","auxtools::raw_types::funcs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auxtools::raw_types::lists","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auxtools::raw_types::miscauxtools::raw_types::procs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auxtools::raw_types::strings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auxtools::raw_types::values","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auxtools::raw_types::variables","","","","","","","","","","auxtools::sigscan","","","","","","","","","",""],"d":["","","A wrapper around Values that make working with lists a …","Used to hook and call procs.","Represents a byond runtime, sort of. This will probably …","A wrapper around Values that make working with strings a …","<code>Value</code> represents any value a DM variable can hold, such …","","Check if the current value is a list and casts it.","Check if the current value is a number and casts it.","Check if the current value is a string and casts it.","","","","","","","","","","","Creates a normal byond ffi function that can be called in …","","","","Calls a method of the value with the given arguments.","Calls a global proc with the given arguments.","","","","","","","","","","","","Finds the first proc with the given path","Finds the n’th re-defined proc with the given path","","","","","","","","","","","","","","","","","","","","","","","","","","blah blah lifetime is not verified with this so use at …","same as from_raw but does not increment the reference …","Creates a Value that references a byond string. Will …","","","","","","Gets a variable by name.","","Gets a variable by name and safely casts it to a […","Gets a variable by name and safely casts it to a float.","Gets a variable by name and safely casts it to a string.","Gets the type of the Value as a string","Equivalent to DM’s <code>global.vars</code>.","","","The <code>hook</code> attribute is used to define functions that may …","","","","","","","","Checks whether this Value’s type is equal to <code>typepath</code>.","","","","","","Creates a new empty list.","","Creates a new value from raw tag and data. Use if you …","","Equivalent to DM’s <code>null</code>.","","","","","","","This macro makes instantiating Runtimes a (little bit) …","","","Sets a variable by name to a given value.","","","","","","","","","","","","","","","","","","","","","","","Gets a turf by coordinates.","Gets a turf by ID, with bounds checking.","Gets a turf by ID, without bounds checking. Use …","","","","","","","Creates a new list filled with <code>capacity</code> nulls.","Equivalent to DM’s <code>world</codenternal thing used when interfacing with BYOND. You …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,2,2,2,1,3,2,4,5,1,3,2,4,5,0,0,4,4,2,4,3,2,4,3,2,4,3,0,2,4,2,4,4,3,3,2,2,4,5,1,3,3,2,2,2,2,2,2,2,2,2,2,4,5,3,4,1,3,2,2,2,2,1,3,3,1,2,3,2,2,2,2,2,2,4,0,4,0,1,3,2,4,5,2,1,2,1,4,5,1,3,2,5,2,4,4,4,2,0,1,0,0,1,2,4,0,0,0,0,2,3,2,4,3,2,2,1,3,2,4,5,1,3,2,4,5,2,2,2,1,3,2,4,5,3,1,2,0,0,6,7,7,6,7,6,7,7,7,7,6,7,7,6,7,7,6,7,7,7,6,7,6,7,6,7,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,9,9,10,9,8,10,9,8,8,8,8,10,9,8,10,9,8,9,9,8,10,9,8,10,9,8,10,9,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,12,13,14,15,16,12,13,14,17,18,19,20,21,22,23,24,15,16,12,13,14,17,18,19,20,21,22,23,24,17,18,23,24,16,12,13,14,17,18,19,20,21,22,23,24,16,12,13,14,17,18,19,20,21,22,23,24,21,22,17,18,19,20,21,22,16,12,13,14,15,16,12,13,14,17,18,19,20,21,22,23,24,0,0,0,16,12,13,14,15,16,12,13,14,17,18,19,20,21,22,23,24,23,24,15,19,20,16,12,13,14,23,24,0,16,12,13,14,17,18,19,20,21,22,23,24,15,16,12,13,14,17,18,19,20,21,22,23,24,15,16,12,13,14,17,18,19,20,21,22,23,24,15,16,12,13,14,17,18,19,20,21,22,23,24,25,0,0,0,0,0,0,26,26,27,28,26,29,30,27,25,28,26,29,30,27,25,30,28,29,29,27,28,25,25,26,28,29,25,29,26,28,26,29,30,27,25,27,25,28,26,29,30,27,25,29,28,29,29,26,28,25,28,29,28,26,29,26,26,25,28,26,29,30,27,25,28,26,29,30,27,25,28,26,29,30,27,25,26,31,32,0,0,0,31,32,33,31,32,33,31,32,31,32,33,31,32,33,31,32,33,31,32,33,33,33,33,33,31,32,31,32,33,31,32,33,31,32,33,33,33,31,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,0,0,34,34,34,34,35,36,34,35,36,34,35,36,34,35,36,36,34,34,34,36,36,34,35,36,34,35,34,35,36,35,35,35,36,34,35,36,34,36,34,35,36,34,35,36,34,35,36,0,37,37,37,37,37,37,37,37,37,0,38,38,0,38,38,38,38,38,38,38],"f":[null,null,null,null,null,null,null,[[["into",8],["value",3]]],[[],[["list",3],["dmresult",6]]],[[],[["dmresult",6],["f32",15]]],[[],[["dmresult",6],["string",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[["asref",8],["str",15]],["dmresult",6]],[[],["dmresult",6]],[[]],[[],["value",3]],[[],["proc",3]],[[]],[[]],[[]],[[]],null,[[]],null,[[],["bool",15]],[[["into",8],["string",3]],["option",4]],[[["into",8],["string",3],["u32",15]],["option",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["stringref",3]],["stringref",3]],[[["list",3]]],[[["i32",15]]],[[["u32",15]]],[[]],[[["bool",15]]],[[["f32",15]]],[[["list",3]]],[[["stringref",3]]],[[["value",3]]],[[["stringref",3]]],[[]],[[]],[[["stringid",3]]],[[["procid",3]],["option",4]],[[["intoiterator",8]]],[[],["dmresult",6]],[[["value",3]]],[[["value",3]],["value",3]],[[["asref",8],["str",15]],["dmresult",6]],[[],["dmresult",6]],[[["value",3]],["dmresult",6]],[[["value",3]],["option",4]],[[["variableid",3]]],[[["into",8],["value",3]],["dmresult",6]],[[["into",8],["stringref",3]],["dmresult",6]],[[],["stringid",3]],[[["into",8],["stringref",3]],[["list",3],["dmresult",6]]],[[["into",8],["stringref",3]],[["dmresult",6],["f32",15]]],[[["into",8],["stringref",3]],[["dmresult",6],["string",3]]],[[],[["string",3],["runtime",3],["result",4]]],[[],["value",3]],[[]],[[],[["result",4],["hookfailure",4]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[["asref",8],["str",15]],["bool",15]],[[["value",3]],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],[["stringref",3],["vec",3]]],null,[[]],[[["str",15]],["dmresult",6]],[[["valuedata",19],["valuetag",4]],["value",3]],[[["into",8],["string",3]]],[[],["value",3]],[[],["u32",15]],[[],[["stringref",3],["vec",3]]],null,null,null,[[["into",8],["value",3]]],null,null,[[["into",8],["value",3]],[["runtime",3],["result",4]]],[[["into",8],["into",8],["value",3],["stringref",3]],["dmresult",6]],[[["u32",15],["vec",3]]],null,null,null,null,[[],[["dmresult",6],["stringref",3]]],[[]],[[]],[[]],[[],["string",3]],[[],[["dmresult",6],["string",3]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u32",15]],["dmresult",6]],[[["u32",15]],["dmresult",6]],[[["u32",15]],["value",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["u32",15]]],[[],["value",3]],null,null,null,null,[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],null,[[]],[[]],null,null,[[],["callstacks",3]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["listid",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["miscid",3]],[[],["miscid",3]],[[],["miscid",3]],[[],["miscid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[],["miscid",3]],[[],["bytecodeid",3]],[[],["localsid",3]],[[],["parametersid",3]],[[],["bytecode_v1",3]],[[],["bytecode_v2",3]],[[],["locals_v1",3]],[[],["locals_v2",3]],[[],["parameters_v1",3]],[[],["parameters_v2",3]],[[],["misc_v1",19]],[[],["misc_v2",19]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],null,null,null,null,null,null,[[["miscid",3]],["bool",15]],[[["bytecodeid",3]],["bool",15]],[[["localsid",3]],["bool",15]],[[["parametersid",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bytecodeid",3]]],[[["localsid",3]]],[[["parametersid",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[["miscid",3]],["bool",15]],[[["bytecodeid",3]],["bool",15]],[[["localsid",3]],["bool",15]],[[["parametersid",3]],["bool",15]],null,null,[[["u16",15],["bytecodeid",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["procid",3]],[[]],null,null,null,[[["procid",3]],["bool",15]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[["procid",3]],["bool",15]],null,null,null,null,null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["stringid",3]],[[],["variableid",3]],[[]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["valuetag",4]],[[],["valuedata",19]],[[],["value",3]],[[]],[[]],[[]],null,[[["valuetag",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],null,[[],["option",4]],[[["str",15]],[["option",4],["scanner",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"List"],[3,"Value"],[3,"StringRef"],[3,"Proc"],[3,"Runtime"],[3,"CallStacks"],[3,"StackFrame"],[3,"ListId"],[3,"List"],[3,"AssociativeListEntry"],[8,"AsMiscId"],[3,"BytecodeId"],[3,"LocalsId"],[3,"ParametersId"],[3,"ParametersData"],[3,"MiscId"],[3,"Bytecode_V1"],[3,"Bytecode_V2"],[3,"Locals_V1"],[3,"Locals_V2"],[3,"Parameters_V1"],[3,"Parameters_V2"],[19,"Misc_V1"],[19,"Misc_V2"],[3,"ProcId"],[3,"ProcInstance"],[3,"SuspendedProcs"],[3,"ProcEntry"],[3,"ExecutionContext"],[3,"SuspendedProcsBuffer"],[3,"StringId"],[3,"VariableId"],[3,"StringEntry"],[4,"ValueTag"],[19,"ValueData"],[3,"Value"],[3,"VariableNameIdTable"],[3,"Scanner"]]},\
"auxtools_impl":{"doc":"","t":[14,23,23,23,23],"n":["convert_signature","hook","init","runtime_handler","shutdown"],"q":["auxtools_impl","","","",""],"d":["","The <code>hook</code> attribute is used to define functions that may …","","",""],"i":[0,0,0,0,0],"f":[null,null,null,null,null],"p":[]},\
"byond_get":{"doc":"","t":[5,5],"n":["get_zip_url","main"],"q":["byond_get",""],"d":["",""],"i":[0,0],"f":[[[["u32",15]],["url",3]],[[]]],"p":[]},\
"debug_server":{"doc":"","t":[7],"n":["DEBUG_SERVER"],"q":["debug_server"],"d":[""],"i":[0],"f":[null],"p":[]},\
"test_runner":{"doc":"","t":[8,5,0,10,5,5,5,5,5,5,5],"n":["ByondCommand","main","paths","with_byond_paths","find_byond","find_byond_bin","find_dll","find_dm","find_dmb","find_dme","find_dreamdaemon"],"q":["test_runner","","","","test_runner::paths","","","","","",""],"d":["","","","","","","","","","",""],"i":[0,0,0,1,0,0,0,0,0,0,0],"f":[null,[[]],null,[[]],[[],["pathbuf",3]],[[],["pathbuf",3]],[[],["pathbuf",3]],[[],["pathbuf",3]],[[],["pathbuf",3]],[[],["pathbuf",3]],[[],["pathbuf",3]]],"p":[[8,"ByondCommand"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};